name: Deploy backend with nest.Js to EC2 AWS

on:
  push:
    paths:
      - backend-nest/**/*
    branches:
      - main

jobs:
  avoid_redundancy:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

  dependencies:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4.0.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "backend-nest/*"
      - name: Installing dependencies
        run: cd backend-nest && rm -rf yarn.lock && npm i

  build:
    needs: [dependencies]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4.0.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "backend-nest*"
      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t aguekdjian/backend-node:latest backend-node/.
      - name: Publish image to docker hub
        run: docker push aguekdjian/backend-node:latest

  deploy:
    needs: build
    runs-on: aws-ec2-node
    steps:
      - name: Delete old container
        run: sudo docker rm -f backend-node-container
      - name: Delete old image
        run: sudo docker image prune
      - name: Login to docker hub
        run: sudo docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Pull Image from docker hub
        run: sudo docker pull aguekdjian/backend-node:latest
      - name: Run docker container
        run: sudo docker run -d -p 8085:8085 --name backend-node-container -e DB_URL=${{secrets.DB_URL}} -e DB_USERNAME=${{secrets.DB_USERNAME}} -e DB_PASSWORD=${{secrets.DB_PASSWORD}} -e JWT_SECRET=${{secrets.JWT_SECRET}} aguekdjian/backend-node:latest
#         SATET=dev
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=cinesearchpro
# DB_USER=postgres
# DB_PASSWORD=password

# APP_PORT=4000

# JWT_SECRET=AcaVaElSecreto21415123
